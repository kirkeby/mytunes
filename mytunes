#!/usr/bin/env python

import os
import sys
import logging
import socket
import asyncore
from threading import Thread

from library import MusicLibrary
from player import Player
from moc import MocClient
from moc import AsyncoreMocProtocol
from telnet import AsyncoreServer, TelnetProtocol

def main(library_path):
    library = MusicLibrary()
    library.open(library_path)
    player = Player(library)

    protocol = AsyncoreMocProtocol()
    client = MocClient(protocol, player)
    protocol.client = client
    player.client = client

    protocol.create_socket(socket.AF_UNIX, socket.SOCK_STREAM)
    protocol.connect('/home/sune/.moc/socket2')

    def telnet_protocol_factory(sock, addr):
        p = TelnetProtocol(sock)
        p.player = player
        p.library = library
        return p
        
    telnetd = AsyncoreServer(telnet_protocol_factory)
    telnetd.create_socket(socket.AF_INET, socket.SOCK_STREAM)
    telnetd.set_reuse_addr()
    telnetd.bind(('127.0.0.1', 12345))
    telnetd.listen(5)
    
    asyncore.loop()

if __name__ == '__main__':
    logging.basicConfig(level=0)
    logging.getLogger().setLevel(0)

    from commands import getoutput
    if not getoutput('pgrep mocp').strip():
        os.system('mocp -S')

    main(os.path.expanduser('~/.mytunes'))
